#!/bin/bash

if [ $# -eq 0 ] ; then
    echo "usage: $0 <dir> [<dir> ...]"
    echo
    echo "Finds Git repositories under <dir> [...] and prints the current"
    echo "branch.  The branch name is printet in green if the repo is clean"
    echo "and red otherwise."
    exit 1
fi

# colors
# Normal Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset

function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/  \1/"
}

function status() {
    cd "$(dirname "$@")"
    pwd
    (git status | grep "nothing to commit") &>/dev/null
    if [ "$?" -eq 0 ] ; then
        echo -en "\x01\x1b[32m\x02"
    else
        echo -en "\x01\x1b[31m\x02"
    fi
    parse_git_branch
    echo -en "\x01\x1b[m\x02"
}

for dir in "$@" ; do
    find "$dir" -name .git -type d | while read repo ; do
        status "$repo"
    done
done
